{"version":3,"sources":["./src/app/models/question.ts","./src/app/models/user.ts","./src/app/pages/profile/profile.component.css","./src/app/pages/profile/profile.component.html","./src/app/pages/profile/profile.component.ts","./src/app/pages/profile/profile.module.ts"],"names":[],"mappings":"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","file":"profile.module.chunk.js","sourcesContent":["export class Question {\n  type: string;\n  question: string;\n  answer: string;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/models/question.ts","import { Question } from './question';\r\n\r\nclass Profile {\r\n  gender: string;\r\n  address: string;\r\n  firstName: string;\r\n  lastName: string;\r\n  website: string;\r\n  phone: string;\r\n  mobile: string;\r\n  birthDate: Date;\r\n}\r\n\r\nexport class User {\r\n  _id: string;\r\n  email: string;\r\n  active: boolean;\r\n  specialist: string;\r\n  profile: Profile;\r\n  questions: Question[];\r\n  createAt: Date;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/models/user.ts","module.exports = \"::ng-deep .form-avatar {\\r\\n  height: 200px;\\r\\n  width: 200px;\\r\\n  border: 1px solid #d2d3d5;\\r\\n  border-radius: 50%;\\r\\n  background-size: contain;\\r\\n  background-image: url('http://localhost:3000/api/account/get/picture');\\r\\n  background-repeat: no-repeat;\\r\\n  background-position: center;\\r\\n}\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/profile/profile.component.css\n// module id = ./src/app/pages/profile/profile.component.css\n// module chunks = profile.module","module.exports = \"<div class=\\\"main-content\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <div id=\\\"form-container\\\">\\n          <form *ngIf=\\\"(user && specialists)\\\" #form (submit)=\\\"onFormSubmit($event)\\\">\\n            <dx-form id=\\\"form\\\"\\n                     [showColonAfterLabel]=\\\"true\\\"\\n                     [showValidationSummary]=\\\"true\\\"\\n                     [formData]=\\\"user\\\"\\n                     validationGroup=\\\"userData\\\">\\n\\n              <dxi-item itemType=\\\"tabbed\\\" [tabPanelOptions]=\\\"{ deferRendering: false }\\\">\\n                <!--Profile Information-->\\n                <dxi-tab title=\\\"General Information\\\" [colCount]=\\\"4\\\">\\n                  <!--Profile Info-->\\n                  <dxi-item itemType=\\\"group\\\" caption=\\\"Personal Data\\\" [colSpan]=\\\"2\\\">\\n                    <!--Email-->\\n                    <dxi-item dataField=\\\"email\\\" [label]=\\\"{text: 'User / Email'}\\\" editorType=\\\"dxTextBox\\\">\\n                      <dxi-validation-rule\\n                        type=\\\"required\\\"\\n                        message=\\\"Email is required\\\">\\n                      </dxi-validation-rule>\\n                    </dxi-item>\\n                    <!--First Name-->\\n                    <dxi-item dataField=\\\"profile.firstName\\\" [label]=\\\"{text: 'First Name'}\\\" editorType=\\\"dxTextBox\\\">\\n                      <dxi-validation-rule\\n                        type=\\\"required\\\"\\n                        message=\\\"First Name is required\\\">\\n                      </dxi-validation-rule>\\n                    </dxi-item>\\n                    <!--Last Name-->\\n                    <dxi-item dataField=\\\"profile.lastName\\\" [label]=\\\"{text: 'Last Name'}\\\" editorType=\\\"dxTextBox\\\">\\n                      <dxi-validation-rule\\n                        type=\\\"required\\\"\\n                        message=\\\"Last Name is required\\\">\\n                      </dxi-validation-rule>\\n                    </dxi-item>\\n                    <!--Specialist-->\\n                    <dxi-item dataField=\\\"specialist\\\" [label]=\\\"{text: 'Specialist'}\\\"\\n                              [editorOptions]=\\\"{ dataSource: specialists, displayExpr: 'description', valueExpr: 'code' }\\\"\\n                              editorType=\\\"dxSelectBox\\\">\\n                    </dxi-item>\\n                    <!--Birth Date-->\\n                    <dxi-item dataField=\\\"profile.birthDate\\\" editorType=\\\"dxDateBox\\\"></dxi-item>\\n                    <!--Gender-->\\n                    <dxi-item dataField=\\\"profile.gender\\\" [label]=\\\"{text: 'Gender'}\\\"\\n                              [editorOptions]=\\\"{ dataSource: genders, displayExpr: 'description', valueExpr: 'id' }\\\"\\n                              editorType=\\\"dxSelectBox\\\">\\n                    </dxi-item>\\n                    <!--Office Phone-->\\n                    <dxi-item dataField=\\\"profile.phone\\\" [label]=\\\"{text: 'Office Phone'}\\\" [editorOptions]=\\\"{ mask: '+1 (000) 000-0000'}\\\"></dxi-item>\\n                    <!--Mobile Phone-->\\n                    <dxi-item dataField=\\\"profile.mobile\\\" [label]=\\\"{text: 'Mobile Phone'}\\\" [editorOptions]=\\\"{ mask: '+1 (000) 000-0000'}\\\"></dxi-item>\\n                    <!--Website-->\\n                    <dxi-item dataField=\\\"profile.website\\\" [label]=\\\"{text: 'Website'}\\\" editorType=\\\"dxTextBox\\\">\\n                    </dxi-item>\\n                    <!--Address-->\\n                    <dxi-item dataField=\\\"profile.address\\\" [label]=\\\"{text: 'Address', height: '140px'}\\\" editorType=\\\"dxTextArea\\\">\\n                    </dxi-item>\\n\\n                  </dxi-item>\\n                  <!--Photo-->\\n                  <dxi-item itemType=\\\"group\\\" caption=\\\"Photo\\\" [colSpan]=\\\"2\\\">\\n                    <dxi-item [colSpan]=\\\"1\\\">\\n                      <div class=\\\"form-avatar\\\">\\n                      </div>\\n                    </dxi-item>\\n                    <dxi-item [colSpan]=\\\"1\\\">\\n                      <dx-file-uploader\\n                        #fileUploader\\n                        uploadUrl=\\\"http://localhost:3000/api/account/upload/picture\\\"\\n                        [multiple]=\\\"true\\\"\\n                        accept=\\\"image/*\\\"\\n                        name=\\\"attachments\\\"\\n                        (onUploaded)=\\\"refresh()\\\"\\n                        uploadMode=\\\"instantly\\\"\\n                      ></dx-file-uploader>\\n                    </dxi-item>\\n                  </dxi-item>\\n                </dxi-tab>\\n                <!-- Background Questions -->\\n                <dxi-tab title=\\\"Background Questions\\\">\\n                  <div *ngIf=\\\"user.questions.length > 0\\\">\\n                    <div class=\\\"list-container\\\">\\n                      <dx-list [items]=\\\"user.questions\\\" height=\\\"100%\\\" [allowItemDeleting]=\\\"true\\\" [allowItemReordering]=\\\"true\\\">\\n                        <div *dxTemplate=\\\"let q of 'item'; let i = index\\\">\\n                          <div>\\n                            <!--Question Literal-->\\n                            <a (click)=\\\"updateQuestion(q, i)\\\">{{ i + 1 }}. {{ q.question }}</a>\\n                            <!--Question Type-->\\n                            <p>{{ q.type }}</p>\\n                          </div>\\n                        </div>\\n                      </dx-list>\\n                    </div>\\n                  </div>\\n                  <dx-button\\n                    style=\\\"float: right; margin-bottom: 10px\\\"\\n                    text=\\\"Create New\\\"\\n                    icon=\\\"fas fa-plus\\\"\\n                    type=\\\"normal\\\"\\n                    (onClick)=\\\"createNew()\\\"\\n                    [useSubmitBehavior]=\\\"false\\\">\\n                  </dx-button>\\n                </dxi-tab>\\n              </dxi-item>\\n            </dx-form>\\n\\n            <br>\\n            <dx-button\\n              text=\\\"Save\\\"\\n              icon=\\\"fas fa-save\\\"\\n              type=\\\"success\\\"\\n              validationGroup=\\\"userData\\\"\\n              [useSubmitBehavior]=\\\"true\\\">\\n            </dx-button>\\n          </form>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<dx-popup\\n  class=\\\"popup\\\"\\n  [showTitle]=\\\"true\\\"\\n  title=\\\"Question Managment\\\"\\n  [dragEnabled]=\\\"false\\\"\\n  [closeOnOutsideClick]=\\\"true\\\"\\n  [(visible)]=\\\"popupVisible\\\">\\n  <div *dxTemplate=\\\"let data of 'content'\\\">\\n    <p>\\n      Question:\\n    </p>\\n    <dx-text-area [(ngModel)]=\\\"currentQuestion.question\\\"></dx-text-area>\\n    <br>\\n    <p>\\n      Type:\\n    </p>\\n    <dx-select-box [(ngModel)]=\\\"currentQuestion.type\\\" [dataSource]=\\\"types\\\" displayExpr=\\\"description\\\" [value]=\\\"types[0].id\\\" valueExpr=\\\"id\\\"></dx-select-box>\\n\\n    <br>\\n    <dx-button\\n      text=\\\"Save\\\"\\n      icon=\\\"fas fa-save\\\"\\n      type=\\\"success\\\"\\n      (onClick)=\\\"saveQuestion()\\\"\\n      [useSubmitBehavior]=\\\"false\\\">\\n    </dx-button>\\n  </div>\\n</dx-popup>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/profile/profile.component.html\n// module id = ./src/app/pages/profile/profile.component.html\n// module chunks = profile.module","import { Component, OnInit } from '@angular/core';\nimport { CrudService } from '../../services/crud.service';\nimport { ActivatedRoute } from '@angular/router';\nimport notify from 'devextreme/ui/notify';\nimport { User } from '../../models/user';\nimport { Question } from '../../models/question';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n  user: User;\n  specialists: any;\n  popupVisible: boolean = false;\n  currentQuestion: any;\n  currentIndexQuestion: number = undefined;\n\n  genders: any = [\n    { id: 'M', description: 'MALE' },\n    { id: 'F', description: 'FEMALE' }\n  ];\n\n  types: any = [\n    { id: 'YES_NO', description: 'YES/NO' },\n    { id: 'OPEN', description: 'DESCRIPTION' },\n    { id: 'NUMBER', description: 'NUMERIC' },\n    { id: 'DATE', description: 'DATE' }\n  ];\n\n  constructor(private crud: CrudService, private route: ActivatedRoute) {\n    this.user = new User();\n\n    this.crud.listEntity('specialists')\n      .then(res => this.specialists = res);\n\n    // Get patient's list from the Doctor\n    this.crud.getEntity('login')\n      .then(res => this.user = res);\n  }\n\n  ngOnInit() {\n  }\n\n  refresh() {\n    window.location.reload();\n  }\n\n  updateQuestion(item: any, index: number) {\n    this.currentIndexQuestion = index;\n    this.currentQuestion = item;\n    this.popupVisible = true;\n  }\n\n  saveQuestion() {\n    if (this.currentIndexQuestion == undefined)\n      this.user.questions.push(this.currentQuestion);\n    else\n      this.user.questions[this.currentIndexQuestion] = this.currentQuestion;\n\n    this.currentIndexQuestion = undefined;\n    this.popupVisible = false;\n  }\n\n  createNew() {\n    this.currentQuestion = new Question();\n    this.popupVisible = true;\n  }\n\n  onFormSubmit(e) {\n    // Create a patient event\n    this.crud.updateEntity(`account/profile`, this.user)\n      .then((res) => {\n        notify('User was updated satisfactory.', 'success', 1000);\n      });\n\n    e.preventDefault();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/pages/profile/profile.component.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\nimport {\n  DxFormModule,\n  DxTextAreaModule,\n  DxCheckBoxModule,\n  DxSelectBoxModule,\n  DxButtonModule,\n  DxTemplateModule,\n  DxFileUploaderModule,\n  DxListModule,\n  DxDateBoxModule,\n  DxNumberBoxModule, DxPopupModule\n} from 'devextreme-angular';\nimport { ProfileComponent } from './profile.component';\n\nconst routes: Routes = [{\n  path: '',\n  component: ProfileComponent\n}];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    DxFormModule,\n    DxTextAreaModule,\n    DxCheckBoxModule,\n    DxSelectBoxModule,\n    DxButtonModule,\n    FormsModule,\n    DxTemplateModule,\n    DxFileUploaderModule,\n    DxListModule,\n    DxDateBoxModule,\n    DxNumberBoxModule,\n    DxPopupModule,\n    DxTextAreaModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [ ProfileComponent ]\n})\nexport class ProfileModule {\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/pages/profile/profile.module.ts"],"sourceRoot":"webpack:///"}